"use strict";(self.webpackChunkmy_page=self.webpackChunkmy_page||[]).push([[55981],{28453:(e,n,i)=>{i.d(n,{R:()=>t,x:()=>r});var a=i(96540);const o={},s=a.createContext(o);function t(e){const n=a.useContext(s);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:t(e.components),a.createElement(s.Provider,{value:n},e.children)}},51295:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>r,default:()=>w,frontMatter:()=>t,metadata:()=>a,toc:()=>d});const a=JSON.parse('{"id":"istqbfoundationlevel/testowanie-w-cyklu-zycia-oprogramowania","title":"\ud83d\udcd8 Testowanie w cyklu \u017cycia oprogramowania","description":"Wprowadzenie","source":"@site/docs/istqbfoundationlevel/testowanie-w-cyklu-zycia-oprogramowania.md","sourceDirName":"istqbfoundationlevel","slug":"/istqbfoundationlevel/testowanie-w-cyklu-zycia-oprogramowania","permalink":"/docs/istqbfoundationlevel/testowanie-w-cyklu-zycia-oprogramowania","draft":false,"unlisted":false,"editUrl":"https://github.com/przemyslvw/my-page/edit/master/docs/istqbfoundationlevel/testowanie-w-cyklu-zycia-oprogramowania.md","tags":[],"version":"current","sidebarPosition":6,"frontMatter":{"id":"testowanie-w-cyklu-zycia-oprogramowania","title":"\ud83d\udcd8 Testowanie w cyklu \u017cycia oprogramowania","sidebar_position":6},"sidebar":"tutorialSidebar","previous":{"title":"\ud83d\udcd8 Podstawowe poj\u0119cia w testowaniu","permalink":"/docs/istqbfoundationlevel/podstawy-testowania-podstawowe-pojecia"},"next":{"title":"\ud83d\udcd8 Statyczne techniki testowania","permalink":"/docs/istqbfoundationlevel/statyczne-techniki-testowania"}}');var o=i(74848),s=i(28453);const t={id:"testowanie-w-cyklu-zycia-oprogramowania",title:"\ud83d\udcd8 Testowanie w cyklu \u017cycia oprogramowania",sidebar_position:6},r="Testowanie w cyklu \u017cycia oprogramowania",l={},d=[{value:"Wprowadzenie",id:"wprowadzenie",level:2},{value:"Modele cyklu \u017cycia oprogramowania",id:"modele-cyklu-\u017cycia-oprogramowania",level:2},{value:"1. <strong>Model kaskadowy (ang. Waterfall Model)</strong>",id:"1-model-kaskadowy-ang-waterfall-model",level:3},{value:"2. <strong>Model iteracyjny (ang. Iterative Model)</strong>",id:"2-model-iteracyjny-ang-iterative-model",level:3},{value:"3. <strong>Model spiralny (ang. Spiral Model)</strong>",id:"3-model-spiralny-ang-spiral-model",level:3},{value:"4. <strong>Modele zwinne (ang. Agile)</strong>",id:"4-modele-zwinne-ang-agile",level:3},{value:"Poziomy test\xf3w",id:"poziomy-test\xf3w",level:2},{value:"Rodzaje test\xf3w",id:"rodzaje-test\xf3w",level:2},{value:"Testowanie w kontek\u015bcie utrzymania",id:"testowanie-w-kontek\u015bcie-utrzymania",level:2},{value:"Podsumowanie",id:"podsumowanie",level:2}];function c(e){const n={br:"br",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"testowanie-w-cyklu-\u017cycia-oprogramowania",children:"Testowanie w cyklu \u017cycia oprogramowania"})}),"\n",(0,o.jsx)(n.h2,{id:"wprowadzenie",children:"Wprowadzenie"}),"\n",(0,o.jsx)(n.p,{children:"Testowanie oprogramowania odgrywa kluczow\u0105 rol\u0119 w ka\u017cdym etapie cyklu \u017cycia oprogramowania (ang. Software Development Life Cycle, SDLC). Pozwala na wczesne wykrywanie defekt\xf3w, zapewnienie jako\u015bci oraz optymalizacj\u0119 koszt\xf3w zwi\u0105zanych z tworzeniem i utrzymaniem systemu."}),"\n",(0,o.jsx)(n.h2,{id:"modele-cyklu-\u017cycia-oprogramowania",children:"Modele cyklu \u017cycia oprogramowania"}),"\n",(0,o.jsxs)(n.h3,{id:"1-model-kaskadowy-ang-waterfall-model",children:["1. ",(0,o.jsx)(n.strong,{children:"Model kaskadowy (ang. Waterfall Model)"})]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Proces liniowy i sekwencyjny, w kt\xf3rym ka\u017cda faza musi zosta\u0107 uko\u0144czona przed rozpocz\u0119ciem kolejnej."}),"\n",(0,o.jsx)(n.li,{children:"Testowanie odbywa si\u0119 po zako\u0144czeniu fazy programowania."}),"\n"]}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Zalety:"})," Prosty do zarz\u0105dzania i zrozumia\u0142y.",(0,o.jsx)(n.br,{}),"\n",(0,o.jsx)(n.strong,{children:"Wady:"})," Brak mo\u017cliwo\u015bci wprowadzania zmian w p\xf3\u017aniejszych etapach."]}),"\n",(0,o.jsxs)(n.h3,{id:"2-model-iteracyjny-ang-iterative-model",children:["2. ",(0,o.jsx)(n.strong,{children:"Model iteracyjny (ang. Iterative Model)"})]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Projekt dzielony jest na mniejsze etapy (iteracje), a ka\u017cda z nich obejmuje wszystkie fazy SDLC."}),"\n",(0,o.jsx)(n.li,{children:"Po ka\u017cdej iteracji produkt jest rozwijany i ulepszany."}),"\n"]}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Zalety:"})," Wczesne dostarczanie dzia\u0142aj\u0105cych wersji produktu.",(0,o.jsx)(n.br,{}),"\n",(0,o.jsx)(n.strong,{children:"Wady:"})," Potencjalne trudno\u015bci w zarz\u0105dzaniu zakresem."]}),"\n",(0,o.jsxs)(n.h3,{id:"3-model-spiralny-ang-spiral-model",children:["3. ",(0,o.jsx)(n.strong,{children:"Model spiralny (ang. Spiral Model)"})]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"\u0141\u0105czy elementy modelu kaskadowego i iteracyjnego z naciskiem na analiz\u0119 ryzyka."}),"\n",(0,o.jsx)(n.li,{children:"Ka\u017cda p\u0119tla spirali reprezentuje jedn\u0105 iteracj\u0119 projektu."}),"\n"]}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Zalety:"})," Skupienie na ryzyku i elastyczno\u015b\u0107.",(0,o.jsx)(n.br,{}),"\n",(0,o.jsx)(n.strong,{children:"Wady:"})," Z\u0142o\u017cono\u015b\u0107 i wysokie koszty."]}),"\n",(0,o.jsxs)(n.h3,{id:"4-modele-zwinne-ang-agile",children:["4. ",(0,o.jsx)(n.strong,{children:"Modele zwinne (ang. Agile)"})]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Podej\u015bcie iteracyjne i przyrostowe, skupiaj\u0105ce si\u0119 na szybkiej dostawie warto\u015bci dla klienta."}),"\n",(0,o.jsxs)(n.li,{children:["Najpopularniejsze metodyki: ",(0,o.jsx)(n.strong,{children:"Scrum"}),", ",(0,o.jsx)(n.strong,{children:"Kanban"}),", ",(0,o.jsx)(n.strong,{children:"Extreme Programming (XP)"}),"."]}),"\n"]}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Zalety:"})," Elastyczno\u015b\u0107 i szybkie reagowanie na zmiany.",(0,o.jsx)(n.br,{}),"\n",(0,o.jsx)(n.strong,{children:"Wady:"})," Wymaga wysokiego zaanga\u017cowania zespo\u0142u i klienta."]}),"\n",(0,o.jsx)(n.h2,{id:"poziomy-test\xf3w",children:"Poziomy test\xf3w"}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Testy jednostkowe (ang. Unit Testing):"}),(0,o.jsx)(n.br,{}),"\n","Testowanie pojedynczych jednostek kodu (np. funkcji, metod) w izolacji."]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Testy integracyjne (ang. Integration Testing):"}),(0,o.jsx)(n.br,{}),"\n","Sprawdzanie wsp\xf3\u0142pracy mi\u0119dzy modu\u0142ami lub komponentami systemu."]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Testy systemowe (ang. System Testing):"}),(0,o.jsx)(n.br,{}),"\n","Ca\u0142o\u015bciowe testowanie zintegrowanego systemu w celu weryfikacji zgodno\u015bci z wymaganiami."]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Testy akceptacyjne (ang. Acceptance Testing):"}),(0,o.jsx)(n.br,{}),"\n","Testowanie ko\u0144cowego produktu z perspektywy u\u017cytkownika ko\u0144cowego, aby upewni\u0107 si\u0119, \u017ce spe\u0142nia jego potrzeby."]}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"rodzaje-test\xf3w",children:"Rodzaje test\xf3w"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Testy funkcjonalne:"})," Sprawdzaj\u0105, czy system dzia\u0142a zgodnie z wymaganiami funkcjonalnymi."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Testy niefunkcjonalne:"})," Oceniaj\u0105 aspekty takie jak wydajno\u015b\u0107, bezpiecze\u0144stwo, u\u017cyteczno\u015b\u0107 czy kompatybilno\u015b\u0107."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Testy regresyjne:"})," Weryfikuj\u0105, czy nowe zmiany nie wprowadzi\u0142y defekt\xf3w w istniej\u0105cej funkcjonalno\u015bci."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Testy eksploracyjne:"})," Testerzy bez wcze\u015bniej zdefiniowanych przypadk\xf3w testowych eksploruj\u0105 system, aby odkry\u0107 nieoczywiste defekty."]}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"testowanie-w-kontek\u015bcie-utrzymania",children:"Testowanie w kontek\u015bcie utrzymania"}),"\n",(0,o.jsx)(n.p,{children:"Po wdro\u017ceniu systemu konieczne jest jego dalsze utrzymanie i rozw\xf3j. Testowanie w tej fazie obejmuje:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Testy regresyjne"})," po ka\u017cdej aktualizacji lub poprawce."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Testy utrzymaniowe"})," w celu zapewnienia stabilno\u015bci systemu."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Testy bezpiecze\u0144stwa"})," i zgodno\u015bci z aktualnymi normami i przepisami."]}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"podsumowanie",children:"Podsumowanie"}),"\n",(0,o.jsx)(n.p,{children:"Testowanie oprogramowania jest integraln\u0105 cz\u0119\u015bci\u0105 cyklu \u017cycia oprogramowania. Odpowiednie zaplanowanie i dostosowanie strategii testowania do konkretnego modelu SDLC pozwala na szybsze wykrywanie defekt\xf3w, ograniczenie koszt\xf3w i dostarczenie wysokiej jako\u015bci produkt\xf3w."})]})}function w(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(c,{...e})}):c(e)}}}]);